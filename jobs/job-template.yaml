- job-template:
    name: '{name}_{env-name}'
    project-type: pipeline
      dsl: |
          build job: "job1"
          parallel [
            2a: build job: "job2a",
            2b: node "dummynode" {{
              sh "echo {isay}"
            }}
          ]

    defaults: global
    description: |- 
            <h6 color="blue">E2E Tests for {env-name} application </h6>
            <ul>
               <li>E2E tests for Leasing app</li>
            </ul>
    disabled: false
    concurrent: true
    quiet-period: 5
    block-downstream: false
    block-upstream: false
    retry-count: 3
    node: master
    build-discarder:
      daysToKeep: 3
      numToKeep: 3
      artifactDaysToKeep: -1
      artifactNumToKeep: -1

    wrappers:
      - ansicolor:
          colormap: "xterm"

    parameters:
      - active-choices:
          name: XCHANGE_BACKEND_TAG
          description: xchange-app backend docker image tag
          choice-type: single-select
          script:
             groovy: |-
               def RepoName = "xchange"
               def command = "aws ecr describe-images --registry-id 615509580745 --repository-name $RepoName --query reverse(sort_by(imageDetails,&imagePushedAt))[*].imageTags[] --output text"
               def proc = command.execute()
               proc.waitFor()
               def output = proc.in.text
               return output.tokenize()
             use-groovy-sandbox: true
          enable-filters: true
          filter-starts-at: 1

      - active-choices:
          name: XCHANGE_FRONTEND_TAG
          description: xchange-app frontend docker image tag
          choice-type: single-select
          script:
             groovy: |-
               def RepoName = "xchange-frontend"
               def command = "aws ecr describe-images --registry-id 615509580745 --repository-name $RepoName --query reverse(sort_by(imageDetails,&imagePushedAt))[*].imageTags[] --output text"
               def proc = command.execute()
               proc.waitFor()
               def output = proc.in.text
               return output.tokenize()
             use-groovy-sandbox: true
          enable-filters: true
          filter-starts-at: 1

      - choice: 
          name: ACTIVE_PROFILE
          description: "Current profile"
          choices:
            - docker

    scm:
      - mainapp-scm

     
- scm:
    name: mainapp-scm
    scm:
      - git:
         url: git clone git@bitbucket.org:xchangeteam/xchange-app.git
         branches:
          - origin/bugfix/LEAS-00-test-run
         credentials-id: bitbucket-username
         
- view:
    name: TESTING
    description: 'Collection of tesing jobs'
    view-type: list
    regex: Test_.*

